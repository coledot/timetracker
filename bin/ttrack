#!/Users/alex/.rvm/rubies/ruby-1.9.2-p290/bin/ruby -w
require 'ttrack'

def usage(tt)
  puts 'Usage: ttrack [%s]' % (tt.commands * '|')
end

databasename = "%s/%s" % [ENV['HOME'], ".timetrackerdb"]
tt = TTrack.new databasename
case ARGV[0]
  when 'start' then
    if tt.start(ARGV[1], ARGV[2])
      puts 'Start tracking issue "%s"' % ARGV[1]
    else
      usage(tt)
    end

  when 'stop' then
    unless tt.stop
      puts 'Not tracking'
    end

  when 'status' then
    status = tt.status(ARGV[1])
    unless status.nil?
      puts 'Tracking task "%s", started %d seconds ago' % [status[:task], status[:elapsed]]
    else
      puts "Not tracking"
    end

  when 'init' then
    puts 'Initlializing empty sqlite database: %s' % databasename
    tt.init

  when 'report' then
    report = tt.report(ARGV[1])
    unless report.nil?
      report.each do |line|
        puts line
      end
    end

  when 'begin' then
    begin
      timestamp = ARGV[3] ? "%s %s" % ARGV[2..3] : ARGV[2]
      tt.set_tstart! ARGV[1], timestamp
    rescue Exception => e
      usage(tt)
    end

  when 'end' then
    begin
      timestamp = ARGV[3] ? "%s %s" % ARGV[2..3] : ARGV[2]
      tt.set_tstop! ARGV[1], timestamp
    rescue
      usage(tt)
    end

  else
    usage(tt)
end
